
# Config parameters to run an experiment.
# All the possible config parameters can be checked on oagcnn/config/default.py
MODEL:
  LOAD_CHECKPOINT: /mnt/gpid07/users/adria.caelles/output_dir/T02_GCNN-TRAINING/checkpoints/T02_GCNN-TRAINING_epoch_6.pth
  # Actions that can be done during training time in a specific epoch
  RUNTIME_CONFIG:
    # Epoch at which the actions will be done
    FreezeRVOSEncoder: 0
    UnfreezeRVOSEncoder: -1
    UsePreviousInferenceMask: 4

OAGCNN:
  MESSAGE_PASSING_STEPS: 5
  USE_TEMPORAL_FEATURES: True
  BACKPROPAGATE_FEATURES: True
  USE_PREVIOUS_INFERENCE_MASK: False
  # Whether to backpropagate gradients through the predicted mask or use just the mask itself (data)
  # Keeping gradient will increase memory usage
  BACKPROPAGATE_PREDICTED_MASKS: True
  NUM_CLASSES: 1
  # MaskedNLLLoss, MaskedBCELoss, SoftIoULoss
  LOSS_FUNCTION: SoftIoULoss
  
  # Parameters to build the architecture
  ARCH:
    # Available Feature extractors: DeepLabV3Plus RVOSFeatureExtractor
    FEATURE_EXTRACTOR: RVOSFeatureExtractor
    
    GRAPH:
      # Available Mask Encoders: MaskCatEncoder MaskEncoderOneStage MaskEncoderTwoStages
      MASK_ENCODING_MODULE: MaskCatEncoder
      # Available Graph Modules: GCNNSimple, GCNNConvBlocks, GRUGCNN, AttentionGRUGCNN
      GCNN_MODULE: GRUGCNN
      # Available ReadOut Modules: ReadOutSimple ReadOutWithRefinement
      READ_OUT: ReadOutSimple

# Parameters to build previous architectures
# Only those that refer to modules used (specified above) will be taken into account
# Ones not mentioned do not have any configurable parameter
RVOSFeatureExtractor:
  RVOS_ENCODER:
    BACKBONE: ResNet101
    LOAD_PRETRAINED: True
    HIDDEN_SIZE: 128
    KERNEL_SIZE: 3
  
  RVOS_ADAPTER:
    USED_FEATURES: [x5, x4, x3, x2]
    # 1 for not changing
    CHANNELS_FACTOR_REDUCTION: 2
    # With respect to input DATA.IMAGE_SIZE!
    SPATIAL_SCALE_FACTOR: 2
  
  #Should be moved to another place
  RVOS_HEAD:
    HIDDEN_SIZE: 32
    DROPOUT: 0.25
    OUT_CHANNELS: 8


DeepLabV3PlusFeatExtract:
  BACKBONE_NAME: resnet50
  OUTPUT_STRIDE: 8
  OUT_CHANNELS: 8
  LOAD_PRETRAINED: True
  WEIGHTS_PAT: "/mnt/gpid07/users/adria.caelles/pre-trained_models/custom_weights_deeplabv3plus_resnet50_voc_os16.pth"

MaskEncoderOneStage:
  OUT_CHANNELS: 16

MaskEncoderTwoStages:
	INT_CHANNELS: 64
	OUT_CHANNELS: 128
	DROPOUT: 0.2
	USE_SKIP_MASK_CONNECTION: False
	
RoIAlignEncoder:
	DILATE: 3
	SPATIAL_SIZE: (14, 14)

ReadOutWithRefinement:
	INTERMEDIATE_CHANNELS: 32
	OUT_NODE_FEATURES: 32


DATA:
  NUM_WORKERS: 5
  SHUFFLE: True
  DROP_LAST: True
  BATCH_SIZE: 4
  VAL_BATCH_SIZE: 1
  CLIP_LENGTH: 5
  MAX_NUM_OBJ: 10
  IMAGE_SIZE: (256, 448)
  AUGMENTATION: True

AUG_TRANSFORMS:
  ROTATION: 10
  TRANSLATION: 0.1
  SHEAR: 0.1
  ZOOM: 0.7

SOLVER:
  OPTIMIZER: Adam
  LR: 0.001
  WEIGHT_DECAY: 0.0001
  NUM_EPOCHS: 11
  CHECKPOINTER:
    SAVE_ALWAYS: True
    PATIENCE: 5
    PATIENCE_DELTA: 0.
  USE_SCHEDULER: True
  LR_SCHEDULER:
    NAME: "MultiStepLR"
    STEPS: [6, 8]
    STEP_SIZE: 0.1
  EVALUATION_METRIC: "loss"
  

DATASETS:
  TRAIN: YouTubeVOS
  TRAIN_SPLIT: train
  VAL: YouTubeVOS
  VAL_SPLIT: val
  TEST: YouTubeVOS
  TEST_SPLIT: test


GENERAL_CONFIG:
  TRAIN_NAME: T05_FreezeEncoder_SmallFCN_AUGM
  PRINT_EVERY: 5
  USE_GPU: True